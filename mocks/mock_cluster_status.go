// Code generated by MockGen. DO NOT EDIT.
// Source: kubeclusteragent/pkg/cluster (interfaces: Status)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1alpha1 "kubeclusteragent/gen/go/agent/v1alpha1"
)

// MockClusterStatus is a mock of Status interface.
type MockClusterStatus struct {
	ctrl     *gomock.Controller
	recorder *MockClusterStatusMockRecorder
}

// MockClusterStatusMockRecorder is the mock recorder for MockClusterStatus.
type MockClusterStatusMockRecorder struct {
	mock *MockClusterStatus
}

// NewMockClusterStatus creates a new mock instance.
func NewMockClusterStatus(ctrl *gomock.Controller) *MockClusterStatus {
	mock := &MockClusterStatus{ctrl: ctrl}
	mock.recorder = &MockClusterStatusMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClusterStatus) EXPECT() *MockClusterStatusMockRecorder {
	return m.recorder
}

// ClusterSpec mocks base method.
func (m *MockClusterStatus) ClusterSpec() *v1alpha1.ClusterSpec {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ClusterSpec")
	ret0, _ := ret[0].(*v1alpha1.ClusterSpec)
	return ret0
}

// ClusterSpec indicates an expected call of ClusterSpec.
func (mr *MockClusterStatusMockRecorder) ClusterSpec() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ClusterSpec", reflect.TypeOf((*MockClusterStatus)(nil).ClusterSpec))
}

// GetAuditHistory mocks base method.
func (m *MockClusterStatus) GetAuditHistory() ([]*v1alpha1.Operations, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAuditHistory")
	ret0, _ := ret[0].([]*v1alpha1.Operations)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAuditHistory indicates an expected call of GetAuditHistory.
func (mr *MockClusterStatusMockRecorder) GetAuditHistory() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAuditHistory", reflect.TypeOf((*MockClusterStatus)(nil).GetAuditHistory))
}

// GetSpec mocks base method.
func (m *MockClusterStatus) GetSpec() *v1alpha1.ClusterSpec {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSpec")
	ret0, _ := ret[0].(*v1alpha1.ClusterSpec)
	return ret0
}

// GetSpec indicates an expected call of GetSpec.
func (mr *MockClusterStatusMockRecorder) GetSpec() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSpec", reflect.TypeOf((*MockClusterStatus)(nil).GetSpec))
}

// GetStatus mocks base method.
func (m *MockClusterStatus) GetStatus() *v1alpha1.ClusterStatus {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStatus")
	ret0, _ := ret[0].(*v1alpha1.ClusterStatus)
	return ret0
}

// GetStatus indicates an expected call of GetStatus.
func (mr *MockClusterStatusMockRecorder) GetStatus() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStatus", reflect.TypeOf((*MockClusterStatus)(nil).GetStatus))
}

// PurgeAllClusterData mocks base method.
func (m *MockClusterStatus) PurgeAllClusterData() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PurgeAllClusterData")
	ret0, _ := ret[0].(error)
	return ret0
}

// PurgeAllClusterData indicates an expected call of PurgeAllClusterData.
func (mr *MockClusterStatusMockRecorder) PurgeAllClusterData() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PurgeAllClusterData", reflect.TypeOf((*MockClusterStatus)(nil).PurgeAllClusterData))
}

// SetAuditHistory mocks base method.
func (m *MockClusterStatus) SetAuditHistory(arg0 *v1alpha1.Operations) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetAuditHistory", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetAuditHistory indicates an expected call of SetAuditHistory.
func (mr *MockClusterStatusMockRecorder) SetAuditHistory(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetAuditHistory", reflect.TypeOf((*MockClusterStatus)(nil).SetAuditHistory), arg0)
}

// SetSpec mocks base method.
func (m *MockClusterStatus) SetSpec(arg0 *v1alpha1.ClusterSpec) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetSpec", arg0)
}

// SetSpec indicates an expected call of SetSpec.
func (mr *MockClusterStatusMockRecorder) SetSpec(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetSpec", reflect.TypeOf((*MockClusterStatus)(nil).SetSpec), arg0)
}

// SetStatus mocks base method.
func (m *MockClusterStatus) SetStatus(arg0 *v1alpha1.ClusterStatus) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetStatus", arg0)
}

// SetStatus indicates an expected call of SetStatus.
func (mr *MockClusterStatusMockRecorder) SetStatus(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetStatus", reflect.TypeOf((*MockClusterStatus)(nil).SetStatus), arg0)
}
